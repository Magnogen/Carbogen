// Direct Primitives / Literals

my_string      = "Hello, World!";
my_number      = 42;
my_decimal     = -4.2;
my_boolean     = true;
my_hexadecimal = #2a;

// Function / Method
//   popping the bubble is deferred until the function/method called
//   this allows it to release differing values
//   a function with no arguments doesn't exist, you'll just need to specify a redundant argument, call it something like "_"

my_function arg    = (arg + 1);
argless_function _ = (2 * (rndm:rnd) - 1);

// Grouped Primitives / Literals

my_list   = [
    "a string",
    (6 * 7),
    5 == 5,
    #2a
];
my_object = {
    key: "value",
    forty_two: 42,
    method arg: (arg + 1),
    my_count: 0,
    self_method amount: (
        self.selfish_count += amount;
        self.selfish_count
    )
};

// Casting

out (#2a == 42);          // > true
out ("42" == 42);         // ! Cannot compare String and Number

// Storage of Numbers and Decimals

out ((0.1 + 0.2) == 0.3); // > true (decimals are stored as fractions after all)
third = (1 / 3);
out (3 * third);          // > 1 (NOT 0.999...)
